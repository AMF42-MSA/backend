server.servlet.context-path: /lecture

---
server.port: 8081

spring:
  profiles: default
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true


  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:29092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        category-in:
          group: category-category-lecture-category
          destination: category-category
          contentType: application/json


logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug

---

spring.profiles: docker

server.port: 8080

spring:
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:9092
      bindings:
        in-categoryChanged:   #이벤트 이름 (consumer-MSA이름-토픽이름)
          destination: categoryChanged   #토픽이름
          contentType: application/json    #데이터형식
          group: CGR-lecture-categoryChanged  #consumer 그룹: CGR-MSA이름-토픽이름
#        event-out:
#          destination: lecture-lecture
#          contentType: application/json

spring.datasource:
  url: jdbc:mysql://mysql/lecture
  username: user
  password: pwd

spring.datasource.hikari.initializationFailTimeout: 60000  

spring.jpa.generate-ddl: true 
spring.jpa.hibernate.ddl-auto: update 
spring.jpa.properties:
  hibernate:
    show_sql: true
    format_sql: true
    
logging:
  level:
    org.hibernate.type: debug
    org.springframework.cloud: debug    
    everylecture: debug    
  pattern.level: "user:%X{user} %5p"
  #출처: https://luvstudy.tistory.com/133 [파란하늘의 지식창고:티스토리]    
#  pattern.console: "%d{HH:mm:ss.SSS} [%6t] %-5level %36logger{36}:%L - %msg%n"
#  pattern.console: "%d{HH:mm:ss.SSS} [%t] %-5level %C:%M:%L - %msg%n"
  pattern.console: "%d{HH:mm:ss.SSS} [%-5level] %C{36}-%M (%L)-%msg%n"
  #https://www.bswen.com/2019/07/springboot-Show-logging-linenumber-in-springboot-applications.html
member:
  ribbon:
    listOfServers: http://member:8080