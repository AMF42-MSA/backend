server:
  port: 8084

---

spring:
  profiles: default

  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  datasource:
    generate-unique-name: false
    url: jdbc:h2:mem:testdb
    driverClassName: org.h2.Driver
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: localhost:29092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:

        in-lectureChanged:
          destination: lectureChanged
          contentType: application/json
        event-in:
          group: everylecture
          destination: lecture
          contentType: application/json
        event-out:
          destination: lecture
          contentType: application/json

logging:
  level:
    org.hibernate.type: trace
    org.springframework.cloud: debug
---
server:
  port: 8080
spring:
  profiles: docker
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://${DB_HOST}:3306/match_db?characterEncoding=UTF-8&serverTimezone=Asia/Seoul
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
    hikari:
     maximum-pool-size: 10
     connection-timeout: 5000
     connection-test-sql: SELECT 1
     minimum-idle: 5
  jpa:
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        show_sql: true
        format_sql: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: kafka:9092
        streams:
          binder:
            configuration:
              default:
                key:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
                value:
                  serde: org.apache.kafka.common.serialization.Serdes$StringSerde
      bindings:
        in-lectureChanged:
          destination: lectureChanged
          contentType: application/json
        event-in:
          group: everylecture
          destination: lecture
          contentType: application/json
        event-out:
          destination: lecture
          contentType: application/json

token:
  expiration_time: 86400000
  secret: amf42_token
